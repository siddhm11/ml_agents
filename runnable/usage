print("\n" + "="*50)
    # print("USAGE INSTRUCTIONS")
    # print("="*50)
    # print("1. Replace 'your_groq_api_key_here' with your actual Groq API key")
    # print("2. Replace 'your_dataset.csv' with your actual CSV file path")
    # print("3. Run: python csv_ml_agent.py")
    # print("4. Check the generated HTML report and saved model files")
    # print("5. Use ModelPredictor class to make predictions on new data")
    # print("\n🚀 The agent will automatically:")
    # print("   • Detect your CSV structure and encoding")
    # print("   • Analyze data quality and patterns using LLM")
    # print("   • Determine the optimal ML problem type")
    # print("   • Recommend and test multiple algorithms")
    # print("   • Build the best performing model")
    # print("   • Generate comprehensive analysis report")
    # print("   • Provide actionable recommendations")
    
    # print("\n📊 Supported Problem Types:")
    # print("   • Classification (binary and multi-class)")
    # print("   • Regression (continuous target prediction)")
    # print("   • Clustering (unsupervised pattern discovery)")
    
    # print("\n🔧 Features:")
    # print("   • Automatic data preprocessing")
    # print("   • Multiple algorithm comparison")
    # print("   • LLM-powered intelligent decision making")
    # print("   • Comprehensive performance evaluation")
    # print("   • Model persistence and deployment utilities")
    # print("   • Detailed HTML reporting")
    # print("   • Error handling and recovery")
    
    # print("\n⚠️  Requirements:")
    # print("   • pip install langgraph groq pandas scikit-learn matplotlib seaborn")
    # print("   • Valid Groq API key for LLM functionality")
    # print("   • CSV file with proper structure")
    
    # print("\n💡 Pro Tips:")
    # print("   • Ensure your CSV has a clear target column for supervised learning")
    # print("   • Clean column names work better (no special characters)")
    # print("   • Larger datasets (>1000 rows) generally produce better models")
    # print("   • The agent works best with mixed data types (numerical + categorical)")
    
    # print("\nHappy ML modeling! 🎉")